#!/usr/bin/env python
PACKAGE = "dynamic_reconfig"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# last three numbers: Default, Min, Max                                          
gen.add("gain", double_t, 0, "A double parameter",    80, 0.0,   200.0)
gen.add("time_window", double_t, 0, "A double parameter",    1500, 0,   10000.0)
gen.add("resonance_period", int_t, 0, "An integer parameter",    1500, 1,   10000)

gen.add("wma_size", int_t, 0, "An integer parameter",    2500, 1,   10000)
gen.add("yaw_p_gain", double_t, 0, "A double parameter",    0.020, 0,   3.000)
gen.add("yaw_d_gain", double_t, 0, "A double parameter",    0.040, 0,   3.000)

gen.add("gain_p_number", double_t, 0, "A double parameter",    5.0, 0,   9.9)
gen.add("gain_p_exp", int_t, 0, "An integer parameter",       -2,  -4,   0)

gen.add("joystick_scale", double_t, 0, "A double parameter",    0.3, 0.1,   1.0)
gen.add("dynamic_scale", double_t, 0, "A double parameter",    1.0, 0.1,   20.0)
gen.add("left_and_right_distance", double_t, 0, "A double parameter",    3.0, 0.0,   5.0)

gen.add("yaw_p_number_js", double_t, 0, "A double parameter",    3.0, 0,   10.0)
gen.add("yaw_p_exp_js", int_t, 0, "An integer parameter",       0, -5,   5)
gen.add("yaw_d_number_js", double_t, 0, "A double parameter",    0.0, 0,   10.0)
gen.add("yaw_d_exp_js", int_t, 0, "An integer parameter",       0, -5,   5)

gen.add("z_p_number_js", double_t, 0, "A double parameter",    3.5, 0,   10.0)
gen.add("z_p_exp_js", int_t, 0, "An integer parameter",       0, -5,   5)
gen.add("z_d_number_js", double_t, 0, "A double parameter",    0, 0,   10.0)
gen.add("z_d_exp_js", int_t, 0, "An integer parameter",       0, -5,   5)

gen.add("xy_p_number_js", double_t, 0, "A double parameter",    2.0, 0,   10.0)
gen.add("xy_p_exp_js", int_t, 0, "An integer parameter",       0, -5,   5)
gen.add("xy_d_number_js", double_t, 0, "A double parameter",    2.0, 0,   10.0)
gen.add("xy_d_exp_js", int_t, 0, "An integer parameter",       -1, -5,   5)

#gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
#gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
#gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

#size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                       gen.const("Medium",     int_t, 1, "A medium constant"),
#                       gen.const("Large",      int_t, 2, "A large constant"),
#                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                     "An enum to set size")

#gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "dynamic_reconfig", "Tutorials"))
# Second parameter: name of a node this could run in
# Third parameter: name of the file
